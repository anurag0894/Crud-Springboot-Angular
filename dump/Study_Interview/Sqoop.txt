$ sqoop import \
  --query 'SELECT a.*, b.* FROM a JOIN b on (a.id == b.id) WHERE $CONDITIONS' \
  -m 1 --target-dir /user/foo/joinresults
  
sqoop import --connect jdbc:oracle:thin:@emdealgaqdwdb01.cloud.ge.com:1522:enndeq01 \
--username SSO502673231 --password swati2016_IQP --query "SELECT * FROM iqp.iqp_business_hier_dim where \$CONDITIONS" -m 1 --target-dir  /apps/hive/warehouse/business.txt

sqoop import --connect jdbc:oracle:thin:@emdeciohpdwdb01.cloud.ge.com:1521:enndep01 \
--username SSO502673231 --password swati2016_IQP --query "SELECT a.iqp_sales_agg_key,a.processdate,b.report_process1,a.invoice_mgmt_key,b.cust_trx_line_gl_dist_id  FROM IQP.IQP_SALES_AGG a,IQP.IQP_INVOICE_MGMT_FACT b WHERE a.invoice_mgmt_key=b.invoice_mgmt_key and a.PROCESSDATE BETWEEN '01-Sep-2018' AND '30-Sep-2018'  and a.CREATED_BY='m_IQP_INVOICE_MGMT_FACT-m_IQP_SALES_LOAD_1'  and \$CONDITIONS" -m 1 --hcatalog-database g00103 --hcatalog-table my_table_orc --create-hcatalog-table --hcatalog-storage-stanza "stored as orc" --verbose

sqoop import --connect jdbc:oracle:thin:@emdeciohpdwdb01.cloud.ge.com:1521:enndep01 \
--username SSO502673231 --password swati2016_IQP --query "SELECT gl_dist_all_last_update_date,process_date,cust_trx_line_gl_dist_id,report_process1,gl_date from iqp.iqp_invoice_mgmt_fact where \$CONDITIONS" -m 1 --hcatalog-database g00103 --hcatalog-table my_table_orc --create-hcatalog-table --hcatalog-storage-stanza "stored as orc" --verbose


--table iqp.iqp_business_hier_dim


 --split-by plantcode_id --target-dir  /apps/hive/warehouse/business.txt

3 files

 student.class  student.jar  student.java
 
--by default 4 mapper

//If you want to change data type while importing

sqoop import ... --map-column-java id=String,value=Integer 

//Include these 2 in log4j.properties and add verbose to get log
sqoop.root.logger=DEBUG,console,DRFA 
org.apache.sqoop=DEBUG, console

some proxy issue won't allow 003 to create table as it will passs on from 001
2018-08-11 09:34:57 INFO  SqoopHCatUtilities:85 - FAILED: SemanticException MetaException(message:org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.authorize.AuthorizationException): Unauthorized connection for super-user: hive/alphd1dx001.dlx.idc.ge.com@DLX.IDC.GE.COM from IP 10.93.228.11)

Hcatalog converts date to string---less precise

18/08/12 20:55:17 DEBUG hcat.SqoopHCatUtilities: No user defined type mapping for HCatalog field RECORD_CREATED_DATE
18/08/12 20:55:17 WARN hcat.SqoopHCatUtilities: Column RECORD_CREATED_DATE had to be cast to a less precise type string in hcatalog


set hadoop.proxyuser.root.hosts=* (permanently in core_site.xml)

for the time being to both

//How to use the sqoop generated class in MapReduce?

1. First configure it(Env)
2. Then configure your mapper class

1.
public int run(String [] args) throws exception
{
 Job job = new Job(getConf());
 job.setJarByClass(YourClass.class);
 job.setMapperClass(SqoopImportMap.class);
 job.setReducerClass(SqoopImprtReduce.class);

 FileInputFormat.addInputPath((job,"hdfs_path_to_your_sqoop_imported_file"));
 FileOutputFormat.setOutputPath((job,"hdfs_output_path"));

 // I simply use text as output for the mapper but it can be any class you designed
 // as long as you implement it as a Writable
 job.setMapOutputKeyClass(Text.Class);
 job.setMapOutputValueClass(Text.Class);

 job.setOutputKeyClass(Text.Class);
 job.setOutputValueClass(Text.Class);
 ...
 
 Now configure your mapper class. Let's assume your sqoop imported java file is called Sqimp.java: and the table you imported had the following columns: id, name, age your mapper class should look like this:
 
 2.
  public static class SqoopImportMap
 extends Mapper<LongWritable, Text, Text, Text> 
 {

 public void map(LongWritable k, Text v, Context context)
 {
  Sqimp s = new Sqimp(); 
  try
  {
  // this is where the code generated by sqoop is used.
  // it automatically casts one line of the imported data into an instance of the generated class, 
  // to let you access the data inside the columns easily
   s.parse(v);
  } 
  catch(ParseError pe) {// do something if there is an error.}

  try
  {
   // now the imported data is accessible:
   // e.g
   if (s.age>30)
   {
    // submit the selected data to the mapper's output as a key value pair.
    context.write(new Text(s.age),new Text(s.id));
   }
  }
  catch(Exception ex)
  {//do something about the error}
 }
}

//SQOOP query.java what it makes

// ORM class for table 'null'
// WARNING: This class is AUTO-GENERATED. Modify at your own risk.
//
// Debug information:
// Generated date: Sat Aug 11 08:22:55 PDT 2018
// For connector: org.apache.sqoop.manager.OracleManager
import org.apache.hadoop.io.BytesWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.Writable;
import org.apache.hadoop.mapred.lib.db.DBWritable;
import com.cloudera.sqoop.lib.JdbcWritableBridge;
import com.cloudera.sqoop.lib.DelimiterSet;
import com.cloudera.sqoop.lib.FieldFormatter;
import com.cloudera.sqoop.lib.RecordParser;
import com.cloudera.sqoop.lib.BooleanParser;
import com.cloudera.sqoop.lib.BlobRef;
import com.cloudera.sqoop.lib.ClobRef;
import com.cloudera.sqoop.lib.LargeObjectLoader;
import com.cloudera.sqoop.lib.SqoopRecord;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class QueryResult extends SqoopRecord  implements DBWritable, Writable {
  private final int PROTOCOL_VERSION = 3;
  public int getClassFormatVersion() { return PROTOCOL_VERSION; }
  public static interface FieldSetterCommand {    void setField(Object value);  }  protected ResultSet __cur_result_set;
  private Map<String, FieldSetterCommand> setters = new HashMap<String, FieldSetterCommand>();
  private void init0() {
    setters.put("BUSINESS_HIER_KEY", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        BUSINESS_HIER_KEY = (java.math.BigDecimal)value;
      }
    });
    setters.put("PLANTCODE_ID", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        PLANTCODE_ID = (String)value;
      }
    });
    setters.put("TIER1", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        TIER1 = (String)value;
      }
    });
    setters.put("TIER2", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        TIER2 = (String)value;
      }
    });
    setters.put("TIER3", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        TIER3 = (String)value;
      }
    });
    setters.put("PNL", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        PNL = (String)value;
      }
    });
    setters.put("SUBPNL", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        SUBPNL = (String)value;
      }
    });
    setters.put("DATA_SOURCE", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        DATA_SOURCE = (String)value;
      }
    });
    setters.put("RECORD_CREATED_DATE", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        RECORD_CREATED_DATE = (java.sql.Timestamp)value;
      }
    });
    setters.put("RECORD_CREATED_BY", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        RECORD_CREATED_BY = (String)value;
      }
    });
    setters.put("RECORD_LAST_UPDATED_BY", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        RECORD_LAST_UPDATED_BY = (String)value;
      }
    });
    setters.put("RECORD_LAST_UPDATED_DATE", new FieldSetterCommand() {
      @Override
      public void setField(Object value) {
        RECORD_LAST_UPDATED_DATE = (java.sql.Timestamp)value;
      }
    });
  }
  public QueryResult() {
    init0();
  }
  private java.math.BigDecimal BUSINESS_HIER_KEY;
  public java.math.BigDecimal get_BUSINESS_HIER_KEY() {
    return BUSINESS_HIER_KEY;
  }
  public void set_BUSINESS_HIER_KEY(java.math.BigDecimal BUSINESS_HIER_KEY) {
    this.BUSINESS_HIER_KEY = BUSINESS_HIER_KEY;
  }
  public QueryResult with_BUSINESS_HIER_KEY(java.math.BigDecimal BUSINESS_HIER_KEY) {
    this.BUSINESS_HIER_KEY = BUSINESS_HIER_KEY;
    return this;
  }
  private String PLANTCODE_ID;
  public String get_PLANTCODE_ID() {
    return PLANTCODE_ID;
  }
  public void set_PLANTCODE_ID(String PLANTCODE_ID) {
    this.PLANTCODE_ID = PLANTCODE_ID;
  }
  public QueryResult with_PLANTCODE_ID(String PLANTCODE_ID) {
    this.PLANTCODE_ID = PLANTCODE_ID;
    return this;
  }
  private String TIER1;
  public String get_TIER1() {
    return TIER1;
  }
  public void set_TIER1(String TIER1) {
    this.TIER1 = TIER1;
  }
  public QueryResult with_TIER1(String TIER1) {
    this.TIER1 = TIER1;
    return this;
  }
  private String TIER2;
  public String get_TIER2() {
    return TIER2;
  }
  public void set_TIER2(String TIER2) {
    this.TIER2 = TIER2;
  }
  public QueryResult with_TIER2(String TIER2) {
    this.TIER2 = TIER2;
    return this;
  }
  private String TIER3;
  public String get_TIER3() {
    return TIER3;
  }
  public void set_TIER3(String TIER3) {
    this.TIER3 = TIER3;
  }
  public QueryResult with_TIER3(String TIER3) {
    this.TIER3 = TIER3;
    return this;
  }
  private String PNL;
  public String get_PNL() {
    return PNL;
  }
  public void set_PNL(String PNL) {
    this.PNL = PNL;
  }
  public QueryResult with_PNL(String PNL) {
    this.PNL = PNL;
    return this;
  }
  private String SUBPNL;
  public String get_SUBPNL() {
    return SUBPNL;
  }
  public void set_SUBPNL(String SUBPNL) {
    this.SUBPNL = SUBPNL;
  }
  public QueryResult with_SUBPNL(String SUBPNL) {
    this.SUBPNL = SUBPNL;
    return this;
  }
  private String DATA_SOURCE;
  public String get_DATA_SOURCE() {
    return DATA_SOURCE;
  }
  public void set_DATA_SOURCE(String DATA_SOURCE) {
    this.DATA_SOURCE = DATA_SOURCE;
  }
  public QueryResult with_DATA_SOURCE(String DATA_SOURCE) {
    this.DATA_SOURCE = DATA_SOURCE;
    return this;
  }
  private java.sql.Timestamp RECORD_CREATED_DATE;
  public java.sql.Timestamp get_RECORD_CREATED_DATE() {
    return RECORD_CREATED_DATE;
  }
  public void set_RECORD_CREATED_DATE(java.sql.Timestamp RECORD_CREATED_DATE) {
    this.RECORD_CREATED_DATE = RECORD_CREATED_DATE;
  }
  public QueryResult with_RECORD_CREATED_DATE(java.sql.Timestamp RECORD_CREATED_DATE) {
    this.RECORD_CREATED_DATE = RECORD_CREATED_DATE;
    return this;
  }
  private String RECORD_CREATED_BY;
  public String get_RECORD_CREATED_BY() {
    return RECORD_CREATED_BY;
  }
  public void set_RECORD_CREATED_BY(String RECORD_CREATED_BY) {
    this.RECORD_CREATED_BY = RECORD_CREATED_BY;
  }
  public QueryResult with_RECORD_CREATED_BY(String RECORD_CREATED_BY) {
    this.RECORD_CREATED_BY = RECORD_CREATED_BY;
    return this;
  }
  private String RECORD_LAST_UPDATED_BY;
  public String get_RECORD_LAST_UPDATED_BY() {
    return RECORD_LAST_UPDATED_BY;
  }
  public void set_RECORD_LAST_UPDATED_BY(String RECORD_LAST_UPDATED_BY) {
    this.RECORD_LAST_UPDATED_BY = RECORD_LAST_UPDATED_BY;
  }
  public QueryResult with_RECORD_LAST_UPDATED_BY(String RECORD_LAST_UPDATED_BY) {
    this.RECORD_LAST_UPDATED_BY = RECORD_LAST_UPDATED_BY;
    return this;
  }
  private java.sql.Timestamp RECORD_LAST_UPDATED_DATE;
  public java.sql.Timestamp get_RECORD_LAST_UPDATED_DATE() {
    return RECORD_LAST_UPDATED_DATE;
  }
  public void set_RECORD_LAST_UPDATED_DATE(java.sql.Timestamp RECORD_LAST_UPDATED_DATE) {
    this.RECORD_LAST_UPDATED_DATE = RECORD_LAST_UPDATED_DATE;
  }
  public QueryResult with_RECORD_LAST_UPDATED_DATE(java.sql.Timestamp RECORD_LAST_UPDATED_DATE) {
    this.RECORD_LAST_UPDATED_DATE = RECORD_LAST_UPDATED_DATE;
    return this;
  }
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (!(o instanceof QueryResult)) {
      return false;
    }
    QueryResult that = (QueryResult) o;
    boolean equal = true;
    equal = equal && (this.BUSINESS_HIER_KEY == null ? that.BUSINESS_HIER_KEY == null : this.BUSINESS_HIER_KEY.equals(that.BUSINESS_HIER_KEY));
    equal = equal && (this.PLANTCODE_ID == null ? that.PLANTCODE_ID == null : this.PLANTCODE_ID.equals(that.PLANTCODE_ID));
    equal = equal && (this.TIER1 == null ? that.TIER1 == null : this.TIER1.equals(that.TIER1));
    equal = equal && (this.TIER2 == null ? that.TIER2 == null : this.TIER2.equals(that.TIER2));
    equal = equal && (this.TIER3 == null ? that.TIER3 == null : this.TIER3.equals(that.TIER3));
    equal = equal && (this.PNL == null ? that.PNL == null : this.PNL.equals(that.PNL));
    equal = equal && (this.SUBPNL == null ? that.SUBPNL == null : this.SUBPNL.equals(that.SUBPNL));
    equal = equal && (this.DATA_SOURCE == null ? that.DATA_SOURCE == null : this.DATA_SOURCE.equals(that.DATA_SOURCE));
    equal = equal && (this.RECORD_CREATED_DATE == null ? that.RECORD_CREATED_DATE == null : this.RECORD_CREATED_DATE.equals(that.RECORD_CREATED_DATE));
    equal = equal && (this.RECORD_CREATED_BY == null ? that.RECORD_CREATED_BY == null : this.RECORD_CREATED_BY.equals(that.RECORD_CREATED_BY));
    equal = equal && (this.RECORD_LAST_UPDATED_BY == null ? that.RECORD_LAST_UPDATED_BY == null : this.RECORD_LAST_UPDATED_BY.equals(that.RECORD_LAST_UPDATED_BY));
    equal = equal && (this.RECORD_LAST_UPDATED_DATE == null ? that.RECORD_LAST_UPDATED_DATE == null : this.RECORD_LAST_UPDATED_DATE.equals(that.RECORD_LAST_UPDATED_DATE));
    return equal;
  }
  public boolean equals0(Object o) {
    if (this == o) {
      return true;
    }
    if (!(o instanceof QueryResult)) {
      return false;
    }
    QueryResult that = (QueryResult) o;
    boolean equal = true;
    equal = equal && (this.BUSINESS_HIER_KEY == null ? that.BUSINESS_HIER_KEY == null : this.BUSINESS_HIER_KEY.equals(that.BUSINESS_HIER_KEY));
    equal = equal && (this.PLANTCODE_ID == null ? that.PLANTCODE_ID == null : this.PLANTCODE_ID.equals(that.PLANTCODE_ID));
    equal = equal && (this.TIER1 == null ? that.TIER1 == null : this.TIER1.equals(that.TIER1));
    equal = equal && (this.TIER2 == null ? that.TIER2 == null : this.TIER2.equals(that.TIER2));
    equal = equal && (this.TIER3 == null ? that.TIER3 == null : this.TIER3.equals(that.TIER3));
    equal = equal && (this.PNL == null ? that.PNL == null : this.PNL.equals(that.PNL));
    equal = equal && (this.SUBPNL == null ? that.SUBPNL == null : this.SUBPNL.equals(that.SUBPNL));
    equal = equal && (this.DATA_SOURCE == null ? that.DATA_SOURCE == null : this.DATA_SOURCE.equals(that.DATA_SOURCE));
    equal = equal && (this.RECORD_CREATED_DATE == null ? that.RECORD_CREATED_DATE == null : this.RECORD_CREATED_DATE.equals(that.RECORD_CREATED_DATE));
    equal = equal && (this.RECORD_CREATED_BY == null ? that.RECORD_CREATED_BY == null : this.RECORD_CREATED_BY.equals(that.RECORD_CREATED_BY));
    equal = equal && (this.RECORD_LAST_UPDATED_BY == null ? that.RECORD_LAST_UPDATED_BY == null : this.RECORD_LAST_UPDATED_BY.equals(that.RECORD_LAST_UPDATED_BY));
    equal = equal && (this.RECORD_LAST_UPDATED_DATE == null ? that.RECORD_LAST_UPDATED_DATE == null : this.RECORD_LAST_UPDATED_DATE.equals(that.RECORD_LAST_UPDATED_DATE));
    return equal;
  }
  public void readFields(ResultSet __dbResults) throws SQLException {
    this.__cur_result_set = __dbResults;
    this.BUSINESS_HIER_KEY = JdbcWritableBridge.readBigDecimal(1, __dbResults);
    this.PLANTCODE_ID = JdbcWritableBridge.readString(2, __dbResults);
    this.TIER1 = JdbcWritableBridge.readString(3, __dbResults);
    this.TIER2 = JdbcWritableBridge.readString(4, __dbResults);
    this.TIER3 = JdbcWritableBridge.readString(5, __dbResults);
    this.PNL = JdbcWritableBridge.readString(6, __dbResults);
    this.SUBPNL = JdbcWritableBridge.readString(7, __dbResults);
    this.DATA_SOURCE = JdbcWritableBridge.readString(8, __dbResults);
    this.RECORD_CREATED_DATE = JdbcWritableBridge.readTimestamp(9, __dbResults);
    this.RECORD_CREATED_BY = JdbcWritableBridge.readString(10, __dbResults);
    this.RECORD_LAST_UPDATED_BY = JdbcWritableBridge.readString(11, __dbResults);
    this.RECORD_LAST_UPDATED_DATE = JdbcWritableBridge.readTimestamp(12, __dbResults);
  }
  public void readFields0(ResultSet __dbResults) throws SQLException {
    this.BUSINESS_HIER_KEY = JdbcWritableBridge.readBigDecimal(1, __dbResults);
    this.PLANTCODE_ID = JdbcWritableBridge.readString(2, __dbResults);
    this.TIER1 = JdbcWritableBridge.readString(3, __dbResults);
    this.TIER2 = JdbcWritableBridge.readString(4, __dbResults);
    this.TIER3 = JdbcWritableBridge.readString(5, __dbResults);
    this.PNL = JdbcWritableBridge.readString(6, __dbResults);
    this.SUBPNL = JdbcWritableBridge.readString(7, __dbResults);
    this.DATA_SOURCE = JdbcWritableBridge.readString(8, __dbResults);
    this.RECORD_CREATED_DATE = JdbcWritableBridge.readTimestamp(9, __dbResults);
    this.RECORD_CREATED_BY = JdbcWritableBridge.readString(10, __dbResults);
    this.RECORD_LAST_UPDATED_BY = JdbcWritableBridge.readString(11, __dbResults);
    this.RECORD_LAST_UPDATED_DATE = JdbcWritableBridge.readTimestamp(12, __dbResults);
  }
  public void loadLargeObjects(LargeObjectLoader __loader)
      throws SQLException, IOException, InterruptedException {
  }
  public void loadLargeObjects0(LargeObjectLoader __loader)
      throws SQLException, IOException, InterruptedException {
  }
  public void write(PreparedStatement __dbStmt) throws SQLException {
    write(__dbStmt, 0);
  }

  public int write(PreparedStatement __dbStmt, int __off) throws SQLException {
    JdbcWritableBridge.writeBigDecimal(BUSINESS_HIER_KEY, 1 + __off, 2, __dbStmt);
    JdbcWritableBridge.writeString(PLANTCODE_ID, 2 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(TIER1, 3 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(TIER2, 4 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(TIER3, 5 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(PNL, 6 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(SUBPNL, 7 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(DATA_SOURCE, 8 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeTimestamp(RECORD_CREATED_DATE, 9 + __off, 93, __dbStmt);
    JdbcWritableBridge.writeString(RECORD_CREATED_BY, 10 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(RECORD_LAST_UPDATED_BY, 11 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeTimestamp(RECORD_LAST_UPDATED_DATE, 12 + __off, 93, __dbStmt);
    return 12;
  }
  public void write0(PreparedStatement __dbStmt, int __off) throws SQLException {
    JdbcWritableBridge.writeBigDecimal(BUSINESS_HIER_KEY, 1 + __off, 2, __dbStmt);
    JdbcWritableBridge.writeString(PLANTCODE_ID, 2 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(TIER1, 3 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(TIER2, 4 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(TIER3, 5 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(PNL, 6 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(SUBPNL, 7 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(DATA_SOURCE, 8 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeTimestamp(RECORD_CREATED_DATE, 9 + __off, 93, __dbStmt);
    JdbcWritableBridge.writeString(RECORD_CREATED_BY, 10 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeString(RECORD_LAST_UPDATED_BY, 11 + __off, 12, __dbStmt);
    JdbcWritableBridge.writeTimestamp(RECORD_LAST_UPDATED_DATE, 12 + __off, 93, __dbStmt);
  }
  public void readFields(DataInput __dataIn) throws IOException {
this.readFields0(__dataIn);  }
  public void readFields0(DataInput __dataIn) throws IOException {
    if (__dataIn.readBoolean()) {
        this.BUSINESS_HIER_KEY = null;
    } else {
    this.BUSINESS_HIER_KEY = com.cloudera.sqoop.lib.BigDecimalSerializer.readFields(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.PLANTCODE_ID = null;
    } else {
    this.PLANTCODE_ID = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.TIER1 = null;
    } else {
    this.TIER1 = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.TIER2 = null;
    } else {
    this.TIER2 = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.TIER3 = null;
    } else {
    this.TIER3 = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.PNL = null;
    } else {
    this.PNL = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.SUBPNL = null;
    } else {
    this.SUBPNL = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.DATA_SOURCE = null;
    } else {
    this.DATA_SOURCE = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.RECORD_CREATED_DATE = null;
    } else {
    this.RECORD_CREATED_DATE = new Timestamp(__dataIn.readLong());
    this.RECORD_CREATED_DATE.setNanos(__dataIn.readInt());
    }
    if (__dataIn.readBoolean()) {
        this.RECORD_CREATED_BY = null;
    } else {
    this.RECORD_CREATED_BY = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.RECORD_LAST_UPDATED_BY = null;
    } else {
    this.RECORD_LAST_UPDATED_BY = Text.readString(__dataIn);
    }
    if (__dataIn.readBoolean()) {
        this.RECORD_LAST_UPDATED_DATE = null;
    } else {
    this.RECORD_LAST_UPDATED_DATE = new Timestamp(__dataIn.readLong());
    this.RECORD_LAST_UPDATED_DATE.setNanos(__dataIn.readInt());
    }
  }
  public void write(DataOutput __dataOut) throws IOException {
    if (null == this.BUSINESS_HIER_KEY) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    com.cloudera.sqoop.lib.BigDecimalSerializer.write(this.BUSINESS_HIER_KEY, __dataOut);
    }
    if (null == this.PLANTCODE_ID) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, PLANTCODE_ID);
    }
    if (null == this.TIER1) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, TIER1);
    }
    if (null == this.TIER2) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, TIER2);
    }
    if (null == this.TIER3) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, TIER3);
    }
    if (null == this.PNL) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, PNL);
    }
    if (null == this.SUBPNL) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, SUBPNL);
    }
    if (null == this.DATA_SOURCE) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, DATA_SOURCE);
    }
    if (null == this.RECORD_CREATED_DATE) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    __dataOut.writeLong(this.RECORD_CREATED_DATE.getTime());
    __dataOut.writeInt(this.RECORD_CREATED_DATE.getNanos());
    }
    if (null == this.RECORD_CREATED_BY) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, RECORD_CREATED_BY);
    }
    if (null == this.RECORD_LAST_UPDATED_BY) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, RECORD_LAST_UPDATED_BY);
    }
    if (null == this.RECORD_LAST_UPDATED_DATE) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    __dataOut.writeLong(this.RECORD_LAST_UPDATED_DATE.getTime());
    __dataOut.writeInt(this.RECORD_LAST_UPDATED_DATE.getNanos());
    }
  }
  public void write0(DataOutput __dataOut) throws IOException {
    if (null == this.BUSINESS_HIER_KEY) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    com.cloudera.sqoop.lib.BigDecimalSerializer.write(this.BUSINESS_HIER_KEY, __dataOut);
    }
    if (null == this.PLANTCODE_ID) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, PLANTCODE_ID);
    }
    if (null == this.TIER1) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, TIER1);
    }
    if (null == this.TIER2) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, TIER2);
    }
    if (null == this.TIER3) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, TIER3);
    }
    if (null == this.PNL) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, PNL);
    }
    if (null == this.SUBPNL) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, SUBPNL);
    }
    if (null == this.DATA_SOURCE) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, DATA_SOURCE);
    }
    if (null == this.RECORD_CREATED_DATE) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    __dataOut.writeLong(this.RECORD_CREATED_DATE.getTime());
    __dataOut.writeInt(this.RECORD_CREATED_DATE.getNanos());
    }
    if (null == this.RECORD_CREATED_BY) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, RECORD_CREATED_BY);
    }
    if (null == this.RECORD_LAST_UPDATED_BY) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    Text.writeString(__dataOut, RECORD_LAST_UPDATED_BY);
    }
    if (null == this.RECORD_LAST_UPDATED_DATE) {
        __dataOut.writeBoolean(true);
    } else {
        __dataOut.writeBoolean(false);
    __dataOut.writeLong(this.RECORD_LAST_UPDATED_DATE.getTime());
    __dataOut.writeInt(this.RECORD_LAST_UPDATED_DATE.getNanos());
    }
  }
  private static final DelimiterSet __outputDelimiters = new DelimiterSet((char) 44, (char) 10, (char) 0, (char) 0, false);
  public String toString() {
    return toString(__outputDelimiters, true);
  }
  public String toString(DelimiterSet delimiters) {
    return toString(delimiters, true);
  }
  public String toString(boolean useRecordDelim) {
    return toString(__outputDelimiters, useRecordDelim);
  }
  public String toString(DelimiterSet delimiters, boolean useRecordDelim) {
    StringBuilder __sb = new StringBuilder();
    char fieldDelim = delimiters.getFieldsTerminatedBy();
    __sb.append(FieldFormatter.escapeAndEnclose(BUSINESS_HIER_KEY==null?"null":BUSINESS_HIER_KEY.toPlainString(), delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(PLANTCODE_ID==null?"null":PLANTCODE_ID, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(TIER1==null?"null":TIER1, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(TIER2==null?"null":TIER2, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(TIER3==null?"null":TIER3, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(PNL==null?"null":PNL, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(SUBPNL==null?"null":SUBPNL, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(DATA_SOURCE==null?"null":DATA_SOURCE, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_CREATED_DATE==null?"null":"" + RECORD_CREATED_DATE, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_CREATED_BY==null?"null":RECORD_CREATED_BY, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_LAST_UPDATED_BY==null?"null":RECORD_LAST_UPDATED_BY, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_LAST_UPDATED_DATE==null?"null":"" + RECORD_LAST_UPDATED_DATE, delimiters));
    if (useRecordDelim) {
      __sb.append(delimiters.getLinesTerminatedBy());
    }
    return __sb.toString();
  }
  public void toString0(DelimiterSet delimiters, StringBuilder __sb, char fieldDelim) {
    __sb.append(FieldFormatter.escapeAndEnclose(BUSINESS_HIER_KEY==null?"null":BUSINESS_HIER_KEY.toPlainString(), delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(PLANTCODE_ID==null?"null":PLANTCODE_ID, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(TIER1==null?"null":TIER1, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(TIER2==null?"null":TIER2, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(TIER3==null?"null":TIER3, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(PNL==null?"null":PNL, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(SUBPNL==null?"null":SUBPNL, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(DATA_SOURCE==null?"null":DATA_SOURCE, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_CREATED_DATE==null?"null":"" + RECORD_CREATED_DATE, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_CREATED_BY==null?"null":RECORD_CREATED_BY, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_LAST_UPDATED_BY==null?"null":RECORD_LAST_UPDATED_BY, delimiters));
    __sb.append(fieldDelim);
    __sb.append(FieldFormatter.escapeAndEnclose(RECORD_LAST_UPDATED_DATE==null?"null":"" + RECORD_LAST_UPDATED_DATE, delimiters));
  }
  private static final DelimiterSet __inputDelimiters = new DelimiterSet((char) 44, (char) 10, (char) 0, (char) 0, false);
  private RecordParser __parser;
  public void parse(Text __record) throws RecordParser.ParseError {
    if (null == this.__parser) {
      this.__parser = new RecordParser(__inputDelimiters);
    }
    List<String> __fields = this.__parser.parseRecord(__record);
    __loadFromFields(__fields);
  }

  public void parse(CharSequence __record) throws RecordParser.ParseError {
    if (null == this.__parser) {
      this.__parser = new RecordParser(__inputDelimiters);
    }
    List<String> __fields = this.__parser.parseRecord(__record);
    __loadFromFields(__fields);
  }

  public void parse(byte [] __record) throws RecordParser.ParseError {
    if (null == this.__parser) {
      this.__parser = new RecordParser(__inputDelimiters);
    }
    List<String> __fields = this.__parser.parseRecord(__record);
    __loadFromFields(__fields);
  }

  public void parse(char [] __record) throws RecordParser.ParseError {
    if (null == this.__parser) {
      this.__parser = new RecordParser(__inputDelimiters);
    }
    List<String> __fields = this.__parser.parseRecord(__record);
    __loadFromFields(__fields);
  }

  public void parse(ByteBuffer __record) throws RecordParser.ParseError {
    if (null == this.__parser) {
      this.__parser = new RecordParser(__inputDelimiters);
    }
    List<String> __fields = this.__parser.parseRecord(__record);
    __loadFromFields(__fields);
  }

  public void parse(CharBuffer __record) throws RecordParser.ParseError {
    if (null == this.__parser) {
      this.__parser = new RecordParser(__inputDelimiters);
    }
    List<String> __fields = this.__parser.parseRecord(__record);
    __loadFromFields(__fields);
  }

  private void __loadFromFields(List<String> fields) {
    Iterator<String> __it = fields.listIterator();
    String __cur_str = null;
    try {
    __cur_str = __it.next();
    if (__cur_str.equals("null") || __cur_str.length() == 0) { this.BUSINESS_HIER_KEY = null; } else {
      this.BUSINESS_HIER_KEY = new java.math.BigDecimal(__cur_str);
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.PLANTCODE_ID = null; } else {
      this.PLANTCODE_ID = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.TIER1 = null; } else {
      this.TIER1 = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.TIER2 = null; } else {
      this.TIER2 = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.TIER3 = null; } else {
      this.TIER3 = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.PNL = null; } else {
      this.PNL = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.SUBPNL = null; } else {
      this.SUBPNL = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.DATA_SOURCE = null; } else {
      this.DATA_SOURCE = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null") || __cur_str.length() == 0) { this.RECORD_CREATED_DATE = null; } else {
      this.RECORD_CREATED_DATE = java.sql.Timestamp.valueOf(__cur_str);
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.RECORD_CREATED_BY = null; } else {
      this.RECORD_CREATED_BY = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.RECORD_LAST_UPDATED_BY = null; } else {
      this.RECORD_LAST_UPDATED_BY = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null") || __cur_str.length() == 0) { this.RECORD_LAST_UPDATED_DATE = null; } else {
      this.RECORD_LAST_UPDATED_DATE = java.sql.Timestamp.valueOf(__cur_str);
    }

    } catch (RuntimeException e) {    throw new RuntimeException("Can't parse input data: '" + __cur_str + "'", e);    }  }

  private void __loadFromFields0(Iterator<String> __it) {
    String __cur_str = null;
    try {
    __cur_str = __it.next();
    if (__cur_str.equals("null") || __cur_str.length() == 0) { this.BUSINESS_HIER_KEY = null; } else {
      this.BUSINESS_HIER_KEY = new java.math.BigDecimal(__cur_str);
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.PLANTCODE_ID = null; } else {
      this.PLANTCODE_ID = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.TIER1 = null; } else {
      this.TIER1 = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.TIER2 = null; } else {
      this.TIER2 = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.TIER3 = null; } else {
      this.TIER3 = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.PNL = null; } else {
      this.PNL = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.SUBPNL = null; } else {
      this.SUBPNL = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.DATA_SOURCE = null; } else {
      this.DATA_SOURCE = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null") || __cur_str.length() == 0) { this.RECORD_CREATED_DATE = null; } else {
      this.RECORD_CREATED_DATE = java.sql.Timestamp.valueOf(__cur_str);
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.RECORD_CREATED_BY = null; } else {
      this.RECORD_CREATED_BY = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null")) { this.RECORD_LAST_UPDATED_BY = null; } else {
      this.RECORD_LAST_UPDATED_BY = __cur_str;
    }

    __cur_str = __it.next();
    if (__cur_str.equals("null") || __cur_str.length() == 0) { this.RECORD_LAST_UPDATED_DATE = null; } else {
      this.RECORD_LAST_UPDATED_DATE = java.sql.Timestamp.valueOf(__cur_str);
    }

    } catch (RuntimeException e) {    throw new RuntimeException("Can't parse input data: '" + __cur_str + "'", e);    }  }

  public Object clone() throws CloneNotSupportedException {
    QueryResult o = (QueryResult) super.clone();
    o.RECORD_CREATED_DATE = (o.RECORD_CREATED_DATE != null) ? (java.sql.Timestamp) o.RECORD_CREATED_DATE.clone() : null;
    o.RECORD_LAST_UPDATED_DATE = (o.RECORD_LAST_UPDATED_DATE != null) ? (java.sql.Timestamp) o.RECORD_LAST_UPDATED_DATE.clone() : null;
    return o;
  }

  public void clone0(QueryResult o) throws CloneNotSupportedException {
    o.RECORD_CREATED_DATE = (o.RECORD_CREATED_DATE != null) ? (java.sql.Timestamp) o.RECORD_CREATED_DATE.clone() : null;
    o.RECORD_LAST_UPDATED_DATE = (o.RECORD_LAST_UPDATED_DATE != null) ? (java.sql.Timestamp) o.RECORD_LAST_UPDATED_DATE.clone() : null;
  }

  public Map<String, Object> getFieldMap() {
    Map<String, Object> __sqoop$field_map = new HashMap<String, Object>();
    __sqoop$field_map.put("BUSINESS_HIER_KEY", this.BUSINESS_HIER_KEY);
    __sqoop$field_map.put("PLANTCODE_ID", this.PLANTCODE_ID);
    __sqoop$field_map.put("TIER1", this.TIER1);
    __sqoop$field_map.put("TIER2", this.TIER2);
    __sqoop$field_map.put("TIER3", this.TIER3);
    __sqoop$field_map.put("PNL", this.PNL);
    __sqoop$field_map.put("SUBPNL", this.SUBPNL);
    __sqoop$field_map.put("DATA_SOURCE", this.DATA_SOURCE);
    __sqoop$field_map.put("RECORD_CREATED_DATE", this.RECORD_CREATED_DATE);
    __sqoop$field_map.put("RECORD_CREATED_BY", this.RECORD_CREATED_BY);
    __sqoop$field_map.put("RECORD_LAST_UPDATED_BY", this.RECORD_LAST_UPDATED_BY);
    __sqoop$field_map.put("RECORD_LAST_UPDATED_DATE", this.RECORD_LAST_UPDATED_DATE);
    return __sqoop$field_map;
  }

  public void getFieldMap0(Map<String, Object> __sqoop$field_map) {
    __sqoop$field_map.put("BUSINESS_HIER_KEY", this.BUSINESS_HIER_KEY);
    __sqoop$field_map.put("PLANTCODE_ID", this.PLANTCODE_ID);
    __sqoop$field_map.put("TIER1", this.TIER1);
    __sqoop$field_map.put("TIER2", this.TIER2);
    __sqoop$field_map.put("TIER3", this.TIER3);
    __sqoop$field_map.put("PNL", this.PNL);
    __sqoop$field_map.put("SUBPNL", this.SUBPNL);
    __sqoop$field_map.put("DATA_SOURCE", this.DATA_SOURCE);
    __sqoop$field_map.put("RECORD_CREATED_DATE", this.RECORD_CREATED_DATE);
    __sqoop$field_map.put("RECORD_CREATED_BY", this.RECORD_CREATED_BY);
    __sqoop$field_map.put("RECORD_LAST_UPDATED_BY", this.RECORD_LAST_UPDATED_BY);
    __sqoop$field_map.put("RECORD_LAST_UPDATED_DATE", this.RECORD_LAST_UPDATED_DATE);
  }

  public void setField(String __fieldName, Object __fieldVal) {
    if (!setters.containsKey(__fieldName)) {
      throw new RuntimeException("No such field:"+__fieldName);
    }
    setters.get(__fieldName).setField(__fieldVal);
  }

}

