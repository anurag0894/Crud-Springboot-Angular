-- Function: al_gem_gs.iqp_talend_function()

-- DROP FUNCTION al_gem_gs.iqp_talend_function();

CREATE OR REPLACE FUNCTION al_gem_gs.iqp_talend_function()
  RETURNS integer AS
$BODY$
DECLARE
	tab_rec         RECORD;
    l_insert_status text;
    l_record_count  int;
	rec_cnt  		int;
    pi_statement    text; 

BEGIN
    RAISE NOTICE 'Begin Program ...';
	rec_cnt:=0;
	l_record_count :=0;
	    FOR tab_rec IN
		EXECUTE 'select * from al_gem_gs.gs_iqp_audit_table where insert_date > current_timestamp - interval ''1 hour'''
		    LOOP
			l_record_count := l_record_count+1;
				if tab_rec.insert_status = 'Success' then
					rec_cnt := rec_cnt + 1;
				end if;
				
			END LOOP;
			
		if l_record_count = rec_cnt then
			RETURN 1;
		else 
			RETURN 0;
		end if;
		END;
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION al_gem_gs.iqp_talend_function()
  OWNER TO "502749466";
GRANT EXECUTE ON FUNCTION al_gem_gs.iqp_talend_function() TO public;
GRANT EXECUTE ON FUNCTION al_gem_gs.iqp_talend_function() TO "502749466";
